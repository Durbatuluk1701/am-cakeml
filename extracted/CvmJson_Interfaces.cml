(** val coq_ProtocolRunRequest_to_JSON :
    coq_ProtocolRunRequest -> coq_JSON **)

fun coq_ProtocolRunRequest_to_JSON req =
  JSON_Object ((coq_STR_TYPE, (InJSON_String
    coq_STR_REQUEST)) :: ((coq_STR_ACTION, (InJSON_String
    coq_STR_RUN)) :: ((coq_STR_REQ_PLC, (InJSON_String
    (let val Build_Serializable to_string _ = coq_Serializable_TARG_ID in
     to_string
       (let val Coq_mkPRReq _ prreq_req_plc _ = req in prreq_req_plc end) end))) :: ((coq_STR_TERM,
    (InJSON_Object
    (let val Build_Jsonifiable to_JSON _ = coq_Jsonifiable_Term in
     to_JSON (let val Coq_mkPRReq prreq_term _ _ = req in prreq_term end) end))) :: ((coq_STR_RAWEV,
    (InJSON_Object
    (let val Build_Jsonifiable to_JSON _ = coq_Jsonifiable_RawEv in
     to_JSON (let val Coq_mkPRReq _ _ prreq_rawev = req in prreq_rawev end) end))) :: [])))))

(** val coq_JSON_to_ProtocolRunRequest :
    coq_JSON -> (coq_ProtocolRunRequest, string) coq_ResultT **)

fun coq_JSON_to_ProtocolRunRequest req =
  res_bind (coq_JSON_get_Object coq_STR_TERM req) (fn temp_term =>
    res_bind (coq_JSON_get_string coq_STR_REQ_PLC req) (fn temp_req_plc =>
      res_bind (coq_JSON_get_Object coq_STR_RAWEV req) (fn temp_ev =>
        res_bind
          (let val Build_Jsonifiable _ from_JSON = coq_Jsonifiable_Term in
           from_JSON temp_term end) (fn term =>
          res_bind
            (let val Build_Serializable _ from_string =
               coq_Serializable_TARG_ID
             in
             from_string temp_req_plc end) (fn req_plc =>
            res_bind
              (let val Build_Jsonifiable _ from_JSON = coq_Jsonifiable_RawEv
               in
               from_JSON temp_ev end) (fn ev => Coq_resultC (Coq_mkPRReq term
              req_plc ev)))))))

(** val coq_ProtocolRunResponse_to_JSON :
    coq_ProtocolRunResponse -> coq_JSON **)

fun coq_ProtocolRunResponse_to_JSON resp =
  JSON_Object ((coq_STR_TYPE, (InJSON_String
    coq_STR_RESPONSE)) :: ((coq_STR_ACTION, (InJSON_String
    coq_STR_RUN)) :: ((coq_STR_SUCCESS, (InJSON_Boolean
    (let val Coq_mkPRResp prresp_success _ = resp in prresp_success end))) :: ((coq_STR_PAYLOAD,
    (InJSON_Object
    (let val Build_Jsonifiable to_JSON _ = coq_Jsonifiable_RawEv in
     to_JSON (let val Coq_mkPRResp _ prresp_ev = resp in prresp_ev end) end))) :: []))))

(** val coq_JSON_to_ProtocolRunResponse :
    coq_JSON -> (coq_ProtocolRunResponse, string) coq_ResultT **)

fun coq_JSON_to_ProtocolRunResponse resp =
  res_bind (coq_JSON_get_bool coq_STR_SUCCESS resp) (fn temp_success =>
    res_bind (coq_JSON_get_Object coq_STR_PAYLOAD resp) (fn temp_ev =>
      res_bind
        (let val Build_Jsonifiable _ from_JSON = coq_Jsonifiable_RawEv in
         from_JSON temp_ev end) (fn ev => Coq_resultC (Coq_mkPRResp
        temp_success ev))))

(** val coq_JSON_to_ProtocolNegotiateRequest :
    coq_JSON -> (coq_ProtocolNegotiateRequest, string) coq_ResultT **)

fun coq_JSON_to_ProtocolNegotiateRequest req =
  res_bind (coq_JSON_get_Object coq_STR_TERM req) (fn temp_term =>
    res_bind
      (let val Build_Jsonifiable _ from_JSON = coq_Jsonifiable_Term in
       from_JSON temp_term end) (fn term => Coq_resultC term))

(** val coq_JSON_to_ProtocolNegotiateResponse :
    coq_JSON -> (coq_ProtocolNegotiateResponse, string) coq_ResultT **)

fun coq_JSON_to_ProtocolNegotiateResponse resp =
  res_bind (coq_JSON_get_bool coq_STR_SUCCESS resp) (fn temp_success =>
    res_bind (coq_JSON_get_Object coq_STR_PAYLOAD resp) (fn temp_term =>
      res_bind
        (let val Build_Jsonifiable _ from_JSON = coq_Jsonifiable_Term in
         from_JSON temp_term end) (fn term => Coq_resultC (Coq_mkPNResp
        temp_success term))))

(** val coq_JSON_to_ProtocolAppraiseRequest :
    coq_JSON -> (coq_ProtocolAppraiseRequest, string) coq_ResultT **)

fun coq_JSON_to_ProtocolAppraiseRequest req =
  res_bind (coq_JSON_get_Object coq_STR_TERM req) (fn temp_term =>
    res_bind (coq_JSON_get_string coq_STR_REQ_PLC req) (fn temp_plc =>
      res_bind (coq_JSON_get_Object coq_STR_EVIDENCE req)
        (fn temp_evidence =>
        res_bind (coq_JSON_get_Object coq_STR_RAWEV req) (fn temp_ev =>
          res_bind
            (let val Build_Jsonifiable _ from_JSON = coq_Jsonifiable_Term in
             from_JSON temp_term end) (fn term =>
            res_bind
              (let val Build_Serializable _ from_string =
                 coq_Serializable_TARG_ID
               in
               from_string temp_plc end) (fn plc =>
              res_bind
                (let val Build_Jsonifiable _ from_JSON =
                   coq_Jsonifiable_Evidence
                 in
                 from_JSON temp_evidence end) (fn evidence =>
                res_bind
                  (let val Build_Jsonifiable _ from_JSON =
                     coq_Jsonifiable_RawEv
                   in
                   from_JSON temp_ev end) (fn ev => Coq_resultC (Coq_mkPAReq
                  term plc evidence ev)))))))))

(** val coq_ProtocolAppraiseResponse_to_JSON :
    coq_ProtocolAppraiseResponse -> coq_JSON **)

fun coq_ProtocolAppraiseResponse_to_JSON resp =
  JSON_Object ((coq_STR_TYPE, (InJSON_String
    coq_STR_RESPONSE)) :: ((coq_STR_ACTION, (InJSON_String
    coq_STR_APPRAISE)) :: ((coq_STR_SUCCESS, (InJSON_Boolean
    (let val Coq_mkPAResp paresp_success _ = resp in paresp_success end))) :: ((coq_STR_PAYLOAD,
    (InJSON_Object
    (let val Build_Jsonifiable to_JSON _ = coq_Jsonifiable_AppResultC in
     to_JSON
       (let val Coq_mkPAResp _ paresp_result = resp in paresp_result end) end))) :: []))))

(** val coq_JSON_to_ProtocolAppraiseResponse :
    coq_JSON -> (coq_ProtocolAppraiseResponse, string) coq_ResultT **)

fun coq_JSON_to_ProtocolAppraiseResponse resp =
  res_bind (coq_JSON_get_bool coq_STR_SUCCESS resp) (fn temp_success =>
    res_bind (coq_JSON_get_Object coq_STR_PAYLOAD resp) (fn temp_result =>
      res_bind
        (let val Build_Jsonifiable _ from_JSON = coq_Jsonifiable_AppResultC in
         from_JSON temp_result end) (fn result => Coq_resultC (Coq_mkPAResp
        temp_success result))))

(** val coq_JSON_to_AM_Protocol_Request :
    coq_JSON -> (coq_AM_Protocol_Requests, string) coq_ResultT **)

fun coq_JSON_to_AM_Protocol_Request req =
  res_bind (coq_JSON_get_string coq_STR_ACTION req) (fn temp_type =>
    case (fn x => fn y => x = y) temp_type coq_STR_RUN of
      True =>
      res_bind (coq_JSON_to_ProtocolRunRequest req) (fn temp_req =>
        Coq_resultC (Protocol_Run_Request temp_req))
    | False =>
      (case (fn x => fn y => x = y) temp_type coq_STR_APPRAISE of
         True =>
         res_bind (coq_JSON_to_ProtocolAppraiseRequest req) (fn temp_req =>
           Coq_resultC (Protocol_Appraise_Request temp_req))
       | False =>
         (case (fn x => fn y => x = y) temp_type coq_STR_NEGOTIATE of
            True =>
            res_bind (coq_JSON_to_ProtocolNegotiateRequest req)
              (fn temp_req => Coq_resultC (Protocol_Negotiate_Request
              temp_req))
          | False => Coq_errC errStr_invalid_request_type)))

(** val coq_JSON_to_AM_Protocol_Response :
    coq_JSON -> (coq_AM_Protocol_Responses, string) coq_ResultT **)

fun coq_JSON_to_AM_Protocol_Response resp =
  res_bind (coq_JSON_get_string coq_STR_ACTION resp) (fn temp_type =>
    case (fn x => fn y => x = y) temp_type coq_STR_RUN of
      True =>
      res_bind (coq_JSON_to_ProtocolRunResponse resp) (fn temp_resp =>
        Coq_resultC (Protocol_Run_Response temp_resp))
    | False =>
      (case (fn x => fn y => x = y) temp_type coq_STR_APPRAISE of
         True =>
         res_bind (coq_JSON_to_ProtocolAppraiseResponse resp)
           (fn temp_resp => Coq_resultC (Protocol_Appraise_Response
           temp_resp))
       | False =>
         (case (fn x => fn y => x = y) temp_type coq_STR_NEGOTIATE of
            True =>
            res_bind (coq_JSON_to_ProtocolNegotiateResponse resp)
              (fn temp_resp => Coq_resultC (Protocol_Negotiate_Response
              temp_resp))
          | False => Coq_errC errStr_invalid_request_type)))

(** val coq_ASPRunRequest_to_JSON : coq_ASPRunRequest -> coq_JSON **)

fun coq_ASPRunRequest_to_JSON req =
  JSON_Object ((coq_STR_TYPE, (InJSON_String
    coq_STR_REQUEST)) :: ((coq_STR_ACTION, (InJSON_String
    coq_STR_ASP_RUN)) :: ((coq_STR_ASP_ID, (InJSON_String
    (let val Build_Serializable to_string _ = coq_Serializable_TARG_ID in
     to_string
       (let val Coq_mkASPRReq asprreq_asp_id _ _ _ _ = req in
        asprreq_asp_id end) end))) :: ((coq_STR_ASP_ARGS, (InJSON_Object
    (let val Build_Jsonifiable to_JSON _ = coq_Jsonifiable_ASP_ARGS in
     to_JSON
       (let val Coq_mkASPRReq _ asprreq_asp_args _ _ _ = req in
        asprreq_asp_args end) end))) :: ((coq_STR_TARG_PLC, (InJSON_String
    (let val Build_Serializable to_string _ = coq_Serializable_TARG_ID in
     to_string
       (let val Coq_mkASPRReq _ _ asprreq_targ_plc _ _ = req in
        asprreq_targ_plc end) end))) :: ((coq_STR_TARG, (InJSON_String
    (let val Build_Serializable to_string _ = coq_Serializable_TARG_ID in
     to_string
       (let val Coq_mkASPRReq _ _ _ asprreq_targ _ = req in asprreq_targ end) end))) :: ((coq_STR_RAWEV,
    (InJSON_Object
    (let val Build_Jsonifiable to_JSON _ = coq_Jsonifiable_RawEv in
     to_JSON
       (let val Coq_mkASPRReq _ _ _ _ asprreq_rawev = req in asprreq_rawev end) end))) :: [])))))))

(** val coq_JSON_to_ASPRunResponse :
    coq_JSON -> (coq_ASPRunResponse, string) coq_ResultT **)

fun coq_JSON_to_ASPRunResponse resp =
  res_bind (coq_JSON_get_bool coq_STR_SUCCESS resp) (fn temp_success =>
    res_bind (coq_JSON_get_Object coq_STR_PAYLOAD resp) (fn temp_rawev =>
      res_bind
        (let val Build_Jsonifiable _ from_JSON = coq_Jsonifiable_RawEv in
         from_JSON temp_rawev end) (fn rawev => Coq_resultC (Coq_mkASPRResp
        temp_success rawev))))

(** val coq_ErrorResponseJSON : string -> coq_JSON **)

fun coq_ErrorResponseJSON msg =
  JSON_Object ((coq_STR_SUCCESS, (InJSON_Boolean
    False)) :: ((coq_STR_PAYLOAD, (InJSON_String msg)) :: []))
