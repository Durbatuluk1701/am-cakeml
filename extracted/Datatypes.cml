datatype ('a, 'b) prod =
  Coq_pair 'a 'b

(** val fst : ('a1, 'a2) prod -> 'a1 **)

fun fst p = case p of
  Coq_pair x _ => x

(** val snd : ('a1, 'a2) prod -> 'a2 **)

fun snd p = case p of
  Coq_pair _ y => y

(** val length : 'a1 list -> nat **)

fun length l = case l of
  [] => O
| _ :: l' => S (length l')

(** val app : 'a1 list -> 'a1 list -> 'a1 list **)

fun app l m =
  case l of
    [] => m
  | a :: l1 => a :: (app l1 m)
