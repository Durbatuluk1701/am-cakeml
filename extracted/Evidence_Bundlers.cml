(** val extd_bundle :
    coq_RawEv -> coq_EvC -> coq_Plc -> nat -> coq_ASP_PARAMS -> (coq_EvC,
    coq_StringT) coq_ResultT **)

fun extd_bundle sig0 e p n ps =
  let val Coq_evc bits et = e in
  (case eqb nat_EqClass (length sig0) n of
     True => Coq_resultC (Coq_evc (app sig0 bits) (Coq_uu p (EXTD n) ps et))
   | False => Coq_errC errStr_raw_evidence_too_long) end

(** val comp_bundle :
    coq_RawEv -> coq_EvC -> coq_Plc -> coq_ASP_PARAMS -> (coq_EvC,
    coq_StringT) coq_ResultT **)

fun comp_bundle hsh e p ps =
  let val Coq_evc _ et = e in
  (case hsh of
     [] => Coq_errC errStr_empty_raw_ev
   | h :: l =>
     (case l of
        [] => Coq_resultC (Coq_evc (h :: []) (Coq_uu p COMP ps et))
      | _ :: _ => Coq_errC errStr_raw_evidence_too_long)) end

(** val encr_bundle :
    coq_RawEv -> coq_EvC -> coq_Plc -> coq_ASP_PARAMS -> (coq_EvC,
    coq_StringT) coq_ResultT **)

fun encr_bundle enc e p ps =
  let val Coq_evc _ et = e in
  (case enc of
     [] => Coq_errC errStr_empty_raw_ev
   | h :: l =>
     (case l of
        [] => Coq_resultC (Coq_evc (h :: []) (Coq_uu p ENCR ps et))
      | _ :: _ => Coq_errC errStr_raw_evidence_too_long)) end

(** val ss_cons : coq_EvC -> coq_EvC -> coq_EvC **)

fun ss_cons e1 e2 =
  let val Coq_evc bits1 et1 = e1 in
  let val Coq_evc bits2 et2 = e2 in
  Coq_evc (app bits1 bits2) (Coq_ss et1 et2) end end
