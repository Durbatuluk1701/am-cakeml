(** val do_asp : coq_ASP_PARAMS -> coq_RawEv -> coq_BS **)

val do_asp =
  failwith "AXIOM TO BE REALIZED"

(** val doRemote_session : coq_Term -> coq_Plc -> coq_EvC -> coq_EvC **)

val doRemote_session =
  failwith "AXIOM TO BE REALIZED"

(** val parallel_vm_thread : coq_Loc -> coq_EvC **)

val parallel_vm_thread =
  failwith "AXIOM TO BE REALIZED"

(** val am_sendReq :
    coq_Term -> coq_Plc -> coq_ReqAuthTok -> coq_RawEv -> coq_RawEv **)

val am_sendReq =
  failwith "AXIOM TO BE REALIZED"

(** val am_sendReq_app :
    coq_Term -> coq_Plc -> coq_Evidence -> coq_RawEv -> coq_AppResultC **)

val am_sendReq_app =
  failwith "AXIOM TO BE REALIZED"

(** val do_asp' : coq_ASP_PARAMS -> coq_RawEv -> coq_BS coq_IO **)

fun do_asp' params e =
  ret (do_asp params e)

(** val doRemote_session' :
    coq_Term -> coq_Plc -> coq_EvC -> coq_EvC coq_IO **)

fun doRemote_session' t pTo e =
  ret (doRemote_session t pTo e)

(** val do_start_par_thread :
    coq_Loc -> coq_Core_Term -> coq_RawEv -> unit coq_IO **)

fun do_start_par_thread _ _ _ =
  ret ()

(** val do_wait_par_thread : coq_Loc -> coq_EvC coq_IO **)

fun do_wait_par_thread loc =
  ret (parallel_vm_thread loc)

(** val requester_bound : coq_Term -> coq_Plc -> coq_ReqAuthTok -> bool **)

val requester_bound =
  failwith "AXIOM TO BE REALIZED"

(** val appraise_auth_tok : coq_AppResultC -> bool **)

val appraise_auth_tok =
  failwith "AXIOM TO BE REALIZED"
