structure CopParser =struct
  (** val isLowerAlpha : ascii -> bool **)

  fun isLowerAlpha c =
    let val n = nat_of_ascii c in
    (case leb (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
            (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
            (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
            (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
            (S (S (S (S (S (S (S (S (S (S
            O)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
            n of
       True =>
       leb n (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
         (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
         (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
         (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
         (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
         (S (S (S (S (S (S (S (S (S
         O))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
     | False => False) end

  (** val isAlpha : ascii -> bool **)

  fun isAlpha c =
    let val n = nat_of_ascii c in
    (case case leb (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
                 (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
                 (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
                 (S (S (S (S (S (S
                 O)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                 n of
            True =>
            leb n (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
              (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
              (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
              (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
              (S (S (S (S (S (S (S
              O))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
          | False => False of
       True => True
     | False =>
       (case leb (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
               (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
               (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
               (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
               (S (S (S (S (S (S (S (S (S (S (S (S (S (S
               O)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
               n of
          True =>
          leb n (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
            (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
            (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
            (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
            (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
            (S (S (S (S (S (S (S (S (S (S (S (S (S (S
            O))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
        | False => False)) end

  (** val isDigit : ascii -> bool **)

  fun isDigit c =
    let val n = nat_of_ascii c in
    (case leb (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
            (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
            (S (S (S (S (S O)))))))))))))))))))))))))))))))))))))))))))))))) n of
       True =>
       leb n (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
         (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
         (S (S (S (S (S (S (S (S (S (S (S (S (S
         O)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
     | False => False) end

  (** val isAlphaNum : ascii -> bool **)

  fun isAlphaNum c =
    case case isAlpha c of
           True => True
         | False => isLowerAlpha c of
      True => True
    | False => isDigit c

  (** val isUnderscore : ascii -> bool **)

  fun isUnderscore c =
    Nat.eqb (nat_of_ascii c) (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
      (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
      (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
      (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S (S
      (S (S (S (S (S (S (S
      O)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

  (** val list_of_string : string -> ascii list **)

  fun list_of_string s = case s of
    EmptyString => []
  | String c s0 => c :: (list_of_string s0)

  (** val string_of_list : ascii list -> string **)

  fun string_of_list xs =
    fold_right (fn x x0 => String x x0) EmptyString xs

  type token = string

  datatype 'x optionE =
    SomeE 'x
  | NoneE string
  | OutOfFuel 

  (** val isIdTail : ascii -> bool **)

  fun isIdTail x =
    case isAlphaNum x of
      True => True
    | False => isUnderscore x

  (** val str_eq_class : string coq_EqClass **)

  val str_eq_class =
    eqb

  type symbol_map = (string, coq_ID_Type) coq_MapD

  (** val parseSymbol :
      token list -> symbol_map -> ((symbol_map, string) prod, token list)
      prod optionE **)

  fun parseSymbol xs sm =
    case xs of
      [] =>
      NoneE (String (Ascii True False True False False False True False)
        (String (Ascii False False False True True True True False) (String
        (Ascii False False False False True True True False) (String (Ascii
        True False True False False True True False) (String (Ascii True True
        False False False True True False) (String (Ascii False False True
        False True True True False) (String (Ascii True False True False
        False True True False) (String (Ascii False False True False False
        True True False) (String (Ascii False False False False False True
        False False) (String (Ascii True False False True False True True
        False) (String (Ascii False False True False False True True False)
        (String (Ascii True False True False False True True False) (String
        (Ascii False True True True False True True False) (String (Ascii
        False False True False True True True False) (String (Ascii True
        False False True False True True False) (String (Ascii False True
        True False False True True False) (String (Ascii True False False
        True False True True False) (String (Ascii True False True False
        False True True False) (String (Ascii False True False False True
        True True False) EmptyString)))))))))))))))))))
    | x :: xs' =>
      (case list_of_string x of
         [] =>
         NoneE (String (Ascii True False False True False False True False)
           (String (Ascii False False True True False True True False)
           (String (Ascii False False True True False True True False)
           (String (Ascii True False True False False True True False)
           (String (Ascii True True True False False True True False) (String
           (Ascii True False False False False True True False) (String
           (Ascii False False True True False True True False) (String (Ascii
           False False False False False True False False) (String (Ascii
           True False False True False True True False) (String (Ascii False
           False True False False True True False) (String (Ascii True False
           True False False True True False) (String (Ascii False True True
           True False True True False) (String (Ascii False False True False
           True True True False) (String (Ascii True False False True False
           True True False) (String (Ascii False True True False False True
           True False) (String (Ascii True False False True False True True
           False) (String (Ascii True False True False False True True False)
           (String (Ascii False True False False True True True False)
           (String (Ascii False True False True True True False False)
           (String (Ascii False False False False False True False False)
           (String (Ascii False True True True False True True False) (String
           (Ascii True False False True False True True False) (String (Ascii
           False False True True False True True False) (String (Ascii False
           False False False False True False False) (String (Ascii True
           False True True False True False False) (String (Ascii False False
           False False False True False False) (String (Ascii True False
           False True False True True False) (String (Ascii True True False
           False True True True False) (String (Ascii False False False False
           False True False False) (String (Ascii False False True False True
           True True False) (String (Ascii False False False True False True
           True False) (String (Ascii True False False True False True True
           False) (String (Ascii True True False False True True True False)
           (String (Ascii False False False False False True False False)
           (String (Ascii False False False False True True True False)
           (String (Ascii True True True True False True True False) (String
           (Ascii True True False False True True True False) (String (Ascii
           True True False False True True True False) (String (Ascii True
           False False True False True True False) (String (Ascii False True
           False False False True True False) (String (Ascii False False True
           True False True True False) (String (Ascii True False True False
           False True True False) (String (Ascii True True True True True
           True False False)
           EmptyString)))))))))))))))))))))))))))))))))))))))))))
       | xh :: xt =>
         (case case isLowerAlpha xh of
                 True => forallb isIdTail xt
               | False => False of
            True => SomeE (Coq_pair (Coq_pair sm x) xs')
          | False =>
            NoneE
              (append (String (Ascii True False False True False False True
                False) (String (Ascii False False True True False True True
                False) (String (Ascii False False True True False True True
                False) (String (Ascii True False True False False True True
                False) (String (Ascii True True True False False True True
                False) (String (Ascii True False False False False True True
                False) (String (Ascii False False True True False True True
                False) (String (Ascii False False False False False True
                False False) (String (Ascii True False False True False False
                True False) (String (Ascii False False True False False True
                True False) (String (Ascii True False True False False True
                True False) (String (Ascii False True True True False True
                True False) (String (Ascii False False True False True True
                True False) (String (Ascii True False False True False True
                True False) (String (Ascii False True True False False True
                True False) (String (Ascii True False False True False True
                True False) (String (Ascii True False True False False True
                True False) (String (Ascii False True False False True True
                True False) (String (Ascii False True False True True True
                False False) (String (Ascii False False False False False
                True False False) (String (Ascii True True True False False
                True False False) EmptyString)))))))))))))))))))))
                (append x (String (Ascii True True True False False True
                  False False) EmptyString)))))

  (** val string_to_IDType : string -> coq_ID_Type **)

  val string_to_IDType =
    failwith "AXIOM TO BE REALIZED"

  (** val parsePlace :
      token list -> symbol_map -> ((symbol_map, string) prod, token list)
      prod optionE **)

  fun parsePlace xs sm =
    case xs of
      [] =>
      NoneE (String (Ascii True False True False False False True False)
        (String (Ascii False False False True True True True False) (String
        (Ascii False False False False True True True False) (String (Ascii
        True False True False False True True False) (String (Ascii True True
        False False False True True False) (String (Ascii False False True
        False True True True False) (String (Ascii True False True False
        False True True False) (String (Ascii False False True False False
        True True False) (String (Ascii False False False False False True
        False False) (String (Ascii False False False False True False True
        False) (String (Ascii False False True True False True True False)
        (String (Ascii True False False False False True True False) (String
        (Ascii True True False False False True True False) (String (Ascii
        True False True False False True True False) EmptyString))))))))))))))
    | x :: xs' =>
      (case list_of_string x of
         [] =>
         NoneE (String (Ascii True False False True False False True False)
           (String (Ascii False False True True False True True False)
           (String (Ascii False False True True False True True False)
           (String (Ascii True False True False False True True False)
           (String (Ascii True True True False False True True False) (String
           (Ascii True False False False False True True False) (String
           (Ascii False False True True False True True False) (String (Ascii
           False False False False False True False False) (String (Ascii
           False False False False True True True False) (String (Ascii False
           False True True False True True False) (String (Ascii True False
           False False False True True False) (String (Ascii True True False
           False False True True False) (String (Ascii True False True False
           False True True False) (String (Ascii False True False True True
           True False False) (String (Ascii False False False False False
           True False False) (String (Ascii False True True True False True
           True False) (String (Ascii True False False True False True True
           False) (String (Ascii False False True True False True True False)
           (String (Ascii False False False False False True False False)
           (String (Ascii True False True True False True False False)
           (String (Ascii False False False False False True False False)
           (String (Ascii True False False True False True True False)
           (String (Ascii True True False False True True True False) (String
           (Ascii False False False False False True False False) (String
           (Ascii False False True False True True True False) (String (Ascii
           False False False True False True True False) (String (Ascii True
           False False True False True True False) (String (Ascii True True
           False False True True True False) (String (Ascii False False False
           False False True False False) (String (Ascii False False False
           False True True True False) (String (Ascii True True True True
           False True True False) (String (Ascii True True False False True
           True True False) (String (Ascii True True False False True True
           True False) (String (Ascii True False False True False True True
           False) (String (Ascii False True False False False True True
           False) (String (Ascii False False True True False True True False)
           (String (Ascii True False True False False True True False)
           (String (Ascii True True True True True True False False)
           EmptyString))))))))))))))))))))))))))))))))))))))
       | xh :: xt =>
         (case case isLowerAlpha xh of
                 True => forallb isDigit xt
               | False => False of
            True =>
            let val dig = string_to_IDType (string_of_list_ascii xt) in
            SomeE (Coq_pair (Coq_pair
            (mapD_set str_eq_class coq_Eq_Class_ID_Type sm x dig) x) xs') end
          | False =>
            (case forallb isDigit (xh :: xt) of
               True =>
               let val dig =
                 string_to_IDType (string_of_list_ascii (list_of_string x))
               in
               SomeE (Coq_pair (Coq_pair
               (mapD_set str_eq_class coq_Eq_Class_ID_Type sm x dig) x) xs') end
             | False =>
               NoneE
                 (append (String (Ascii True False False True False False
                   True False) (String (Ascii False False True True False
                   True True False) (String (Ascii False False True True
                   False True True False) (String (Ascii True False True
                   False False True True False) (String (Ascii True True True
                   False False True True False) (String (Ascii True False
                   False False False True True False) (String (Ascii False
                   False True True False True True False) (String (Ascii
                   False False False False False True False False) (String
                   (Ascii True False False True False False True False)
                   (String (Ascii False False True False False True True
                   False) (String (Ascii True False True False False True
                   True False) (String (Ascii False True True True False True
                   True False) (String (Ascii False False True False True
                   True True False) (String (Ascii True False False True
                   False True True False) (String (Ascii False True True
                   False False True True False) (String (Ascii True False
                   False True False True True False) (String (Ascii True
                   False True False False True True False) (String (Ascii
                   False True False False True True True False) (String
                   (Ascii False True False True True True False False)
                   (String (Ascii False False False False False True False
                   False) (String (Ascii True True True False False True
                   False False) EmptyString)))))))))))))))))))))
                   (append x (String (Ascii True True True False False True
                     False False) EmptyString))))))

  (** val parseCopy :
      token list -> symbol_map -> ((symbol_map, coq_Term) prod, token list)
      prod optionE **)

  fun parseCopy xs sm =
    case xs of
      [] =>
      NoneE (String (Ascii True False True False False False True False)
        (String (Ascii False False False True True True True False) (String
        (Ascii False False False False True True True False) (String (Ascii
        True False True False False True True False) (String (Ascii True True
        False False False True True False) (String (Ascii False False True
        False True True True False) (String (Ascii True False True False
        False True True False) (String (Ascii False False True False False
        True True False) (String (Ascii False False False False False True
        False False) (String (Ascii True False False False False True True
        False) (String (Ascii False False False False False True False False)
        (String (Ascii True True False False False True True False) (String
        (Ascii True True True True False True True False) (String (Ascii
        False False False False True True True False) (String (Ascii True
        False False True True True True False) EmptyString)))))))))))))))
    | h :: t =>
      (case eqb h (String (Ascii True True True True True False True False)
              EmptyString) of
         True => SomeE (Coq_pair (Coq_pair sm (Coq_asp CPY)) t)
       | False =>
         NoneE (String (Ascii True False False True False False True False)
           (String (Ascii False True True True False True True False) (String
           (Ascii False True True False True True True False) (String (Ascii
           True False False False False True True False) (String (Ascii False
           False True True False True True False) (String (Ascii True False
           False True False True True False) (String (Ascii False False True
           False False True True False) (String (Ascii False False False
           False False True False False) (String (Ascii True True False False
           False False True False) (String (Ascii False False False False
           True False True False) (String (Ascii True False False True True
           False True False) EmptyString))))))))))))

  (** val parseASPC :
      token list -> symbol_map -> ((symbol_map, coq_Term) prod, token list)
      prod optionE **)

  fun parseASPC xs sm =
    let val sym1 = parseSymbol xs sm in
    (case sym1 of
       SomeE x =>
       let val Coq_pair p xs' = x in
       let val Coq_pair sm' x' = p in
       let val place = parsePlace xs' sm' in
       (case place of
          SomeE x0 =>
          let val Coq_pair p0 xs'' = x0 in
          let val Coq_pair sm'' x'' = p0 in
          let val sym2 = parseSymbol xs'' sm'' in
          (case sym2 of
             SomeE x1 =>
             let val Coq_pair p1 xs''' = x1 in
             let val Coq_pair sm''' x''' = p1 in
             (case mapD_get_value str_eq_class coq_Eq_Class_ID_Type sm''' x'' of
                Some pNat =>
                SomeE (Coq_pair (Coq_pair sm''' (Coq_asp (ASPC ALL EXTD
                  (Coq_asp_paramsC (string_to_IDType x') [] pNat
                  (string_to_IDType x'''))))) xs''')
              | None =>
                NoneE (String (Ascii False True True False False False True
                  False) (String (Ascii True False False False False True
                  True False) (String (Ascii True False False True False True
                  True False) (String (Ascii False False True True False True
                  True False) (String (Ascii True False True False False True
                  True False) (String (Ascii False False True False False
                  True True False) (String (Ascii False False False False
                  False True False False) (String (Ascii False False True
                  False True True True False) (String (Ascii True True True
                  True False True True False) (String (Ascii False False
                  False False False True False False) (String (Ascii False
                  True True False False True True False) (String (Ascii True
                  False False True False True True False) (String (Ascii
                  False True True True False True True False) (String (Ascii
                  False False True False False True True False) (String
                  (Ascii False False False False False True False False)
                  (String (Ascii False True False False True True True False)
                  (String (Ascii True False True False False True True False)
                  (String (Ascii False False True True False True True False)
                  (String (Ascii True False True False False True True False)
                  (String (Ascii False True True False True True True False)
                  (String (Ascii True False False False False True True
                  False) (String (Ascii False True True True False True True
                  False) (String (Ascii False False True False True True True
                  False) (String (Ascii False False False False False True
                  False False) (String (Ascii True True False False True True
                  True False) (String (Ascii True False False True True True
                  True False) (String (Ascii True False True True False True
                  True False) (String (Ascii False True False False False
                  True True False) (String (Ascii True True True True False
                  True True False) (String (Ascii False False True True False
                  True True False) (String (Ascii False False False False
                  False True False False) (String (Ascii False True True
                  False False True True False) (String (Ascii True True True
                  True False True True False) (String (Ascii False True False
                  False True True True False) (String (Ascii False False
                  False False False True False False) (String (Ascii True
                  False False False False False True False) (String (Ascii
                  True True False False True False True False) (String (Ascii
                  False False False False True False True False) (String
                  (Ascii True True False False False False True False)
                  EmptyString)))))))))))))))))))))))))))))))))))))))) end end
           | NoneE m => NoneE m
           | OutOfFuel => OutOfFuel) end end end
        | NoneE m => NoneE m
        | OutOfFuel => OutOfFuel) end end end
     | NoneE m => NoneE m
     | OutOfFuel => OutOfFuel) end

  (** val parseSign :
      token list -> symbol_map -> ((symbol_map, coq_Term) prod, token list)
      prod optionE **)

  fun parseSign xs sm =
    case xs of
      [] =>
      NoneE (String (Ascii True False True False False False True False)
        (String (Ascii False False False True True True True False) (String
        (Ascii False False False False True True True False) (String (Ascii
        True False True False False True True False) (String (Ascii True True
        False False False True True False) (String (Ascii False False True
        False True True True False) (String (Ascii True False True False
        False True True False) (String (Ascii False False True False False
        True True False) (String (Ascii False False False False False True
        False False) (String (Ascii True False False False False True True
        False) (String (Ascii False False False False False True False False)
        (String (Ascii True True False False True True True False) (String
        (Ascii True False False True False True True False) (String (Ascii
        True True True False False True True False) (String (Ascii False True
        True True False True True False) EmptyString)))))))))))))))
    | h :: t =>
      (case eqb h (String (Ascii True False False False False True False
              False) EmptyString) of
         True => SomeE (Coq_pair (Coq_pair sm (Coq_asp SIG)) t)
       | False =>
         NoneE (String (Ascii True False False True False False True False)
           (String (Ascii False True True True False True True False) (String
           (Ascii False True True False True True True False) (String (Ascii
           True False False False False True True False) (String (Ascii False
           False True True False True True False) (String (Ascii True False
           False True False True True False) (String (Ascii False False True
           False False True True False) (String (Ascii False False False
           False False True False False) (String (Ascii True True False False
           True False True False) (String (Ascii True False False True False
           False True False) (String (Ascii True True True False False False
           True False) (String (Ascii False True True True False False True
           False) EmptyString)))))))))))))

  (** val parseHash :
      token list -> symbol_map -> ((symbol_map, coq_Term) prod, token list)
      prod optionE **)

  fun parseHash xs sm =
    case xs of
      [] =>
      NoneE (String (Ascii True False True False False False True False)
        (String (Ascii False False False True True True True False) (String
        (Ascii False False False False True True True False) (String (Ascii
        True False True False False True True False) (String (Ascii True True
        False False False True True False) (String (Ascii False False True
        False True True True False) (String (Ascii True False True False
        False True True False) (String (Ascii False False True False False
        True True False) (String (Ascii False False False False False True
        False False) (String (Ascii True False False False False True True
        False) (String (Ascii False False False False False True False False)
        (String (Ascii False False False True False True True False) (String
        (Ascii True False False False False True True False) (String (Ascii
        True True False False True True True False) (String (Ascii False
        False False True False True True False) EmptyString)))))))))))))))
    | h :: t =>
      (case eqb h (String (Ascii True True False False False True False
              False) EmptyString) of
         True => SomeE (Coq_pair (Coq_pair sm (Coq_asp HSH)) t)
       | False =>
         NoneE (String (Ascii True False False True False False True False)
           (String (Ascii False True True True False True True False) (String
           (Ascii False True True False True True True False) (String (Ascii
           True False False False False True True False) (String (Ascii False
           False True True False True True False) (String (Ascii True False
           False True False True True False) (String (Ascii False False True
           False False True True False) (String (Ascii False False False
           False False True False False) (String (Ascii False False False
           True False False True False) (String (Ascii True False False False
           False False True False) (String (Ascii True True False False True
           False True False) (String (Ascii False False False True False
           False True False) EmptyString)))))))))))))

  (** val parseNull :
      token list -> symbol_map -> ((symbol_map, coq_Term) prod, token list)
      prod optionE **)

  fun parseNull xs sm =
    case xs of
      [] =>
      NoneE (String (Ascii True False True False False False True False)
        (String (Ascii False False False True True True True False) (String
        (Ascii False False False False True True True False) (String (Ascii
        True False True False False True True False) (String (Ascii True True
        False False False True True False) (String (Ascii False False True
        False True True True False) (String (Ascii True False True False
        False True True False) (String (Ascii False False True False False
        True True False) (String (Ascii False False False False False True
        False False) (String (Ascii False True True True False False True
        False) (String (Ascii True False True False True False True False)
        (String (Ascii False False True True False False True False) (String
        (Ascii False False True True False False True False)
        EmptyString)))))))))))))
    | h :: t =>
      (case eqb h (String (Ascii True True False True True True True False)
              (String (Ascii True False True True True True True False)
              EmptyString)) of
         True => SomeE (Coq_pair (Coq_pair sm (Coq_asp NULL)) t)
       | False =>
         NoneE (String (Ascii True False False True False False True False)
           (String (Ascii False True True True False True True False) (String
           (Ascii False True True False True True True False) (String (Ascii
           True False False False False True True False) (String (Ascii False
           False True True False True True False) (String (Ascii True False
           False True False True True False) (String (Ascii False False True
           False False True True False) (String (Ascii False False False
           False False True False False) (String (Ascii False True True True
           False False True False) (String (Ascii True False True False True
           True True False) (String (Ascii False False True True False True
           True False) (String (Ascii False False True True False True True
           False) EmptyString)))))))))))))

  (** val parseASP :
      token list -> symbol_map -> ((symbol_map, coq_Term) prod, token list)
      prod optionE **)

  fun parseASP xs sm =
    case xs of
      [] =>
      NoneE (String (Ascii True False True False False False True False)
        (String (Ascii False False False True True True True False) (String
        (Ascii False False False False True True True False) (String (Ascii
        True False True False False True True False) (String (Ascii True True
        False False False True True False) (String (Ascii False False True
        False True True True False) (String (Ascii True False True False
        False True True False) (String (Ascii False False True False False
        True True False) (String (Ascii False False False False False True
        False False) (String (Ascii True False False False False False True
        False) (String (Ascii True True False False True False True False)
        (String (Ascii False False False False True False True False)
        EmptyString))))))))))))
    | _ :: _ =>
      (case parseNull xs sm of
         NoneE _ =>
         (case parseCopy xs sm of
            NoneE _ =>
            (case parseASPC xs sm of
               NoneE _ =>
               (case parseSign xs sm of
                  NoneE _ =>
                  (case parseHash xs sm of
                     NoneE _ =>
                     NoneE (String (Ascii True False True False False False
                       True False) (String (Ascii False False False True True
                       True True False) (String (Ascii False False False
                       False True True True False) (String (Ascii True False
                       True False False True True False) (String (Ascii True
                       True False False False True True False) (String (Ascii
                       False False True False True True True False) (String
                       (Ascii True False True False False True True False)
                       (String (Ascii False False True False False True True
                       False) (String (Ascii False False False False False
                       True False False) (String (Ascii True False False
                       False False True True False) (String (Ascii False True
                       True True False True True False) (String (Ascii False
                       False False False False True False False) (String
                       (Ascii True False False False False False True False)
                       (String (Ascii True True False False True False True
                       False) (String (Ascii False False False False True
                       False True False) EmptyString)))))))))))))))
                   | x => x)
                | x => x)
             | x => x)
          | x => x)
       | x => x)

  (** val parseBranch :
      token list -> coq_Term -> symbol_map -> ((symbol_map, coq_Term ->
      coq_Term) prod, token list) prod optionE **)

  fun parseBranch xs prevT sm =
    case xs of
      [] =>
      NoneE (String (Ascii True False True False False False True False)
        (String (Ascii False False False True True True True False) (String
        (Ascii False False False False True True True False) (String (Ascii
        True False True False False True True False) (String (Ascii True True
        False False False True True False) (String (Ascii False False True
        False True True True False) (String (Ascii True False True False
        False True True False) (String (Ascii False False True False False
        True True False) (String (Ascii False False False False False True
        False False) (String (Ascii False True False False False True True
        False) (String (Ascii False True False False True True True False)
        (String (Ascii True False False False False True True False) (String
        (Ascii False True True True False True True False) (String (Ascii
        True True False False False True True False) (String (Ascii False
        False False True False True True False) EmptyString)))))))))))))))
    | h :: t =>
      (case string_dec h (String (Ascii True False True True False True False
              False) (String (Ascii False False True True True True False
              False) (String (Ascii True False True True False True False
              False) EmptyString))) of
         Coq_left =>
         SomeE (Coq_pair (Coq_pair sm (fn t' => Coq_bseq (Coq_pair NONE NONE)
           prevT t')) t)
       | Coq_right =>
         (case string_dec h (String (Ascii True False True True False True
                 False False) (String (Ascii False False True True True True
                 False False) (String (Ascii True True False True False True
                 False False) EmptyString))) of
            Coq_left =>
            SomeE (Coq_pair (Coq_pair sm (fn t' => Coq_bseq (Coq_pair NONE
              ALL) prevT t')) t)
          | Coq_right =>
            (case string_dec h (String (Ascii True True False True False True
                    False False) (String (Ascii False False True True True
                    True False False) (String (Ascii True False True True
                    False True False False) EmptyString))) of
               Coq_left =>
               SomeE (Coq_pair (Coq_pair sm (fn t' => Coq_bseq (Coq_pair ALL
                 NONE) prevT t')) t)
             | Coq_right =>
               (case string_dec h (String (Ascii True True False True False
                       True False False) (String (Ascii False False True True
                       True True False False) (String (Ascii True True False
                       True False True False False) EmptyString))) of
                  Coq_left =>
                  SomeE (Coq_pair (Coq_pair sm (fn t' => Coq_bseq (Coq_pair
                    ALL ALL) prevT t')) t)
                | Coq_right =>
                  (case string_dec h (String (Ascii True False True True
                          False True False False) (String (Ascii False True
                          True True True True True False) (String (Ascii True
                          False True True False True False False)
                          EmptyString))) of
                     Coq_left =>
                     SomeE (Coq_pair (Coq_pair sm (fn t' => Coq_bpar
                       (Coq_pair NONE NONE) prevT t')) t)
                   | Coq_right =>
                     (case string_dec h (String (Ascii True False True True
                             False True False False) (String (Ascii False
                             True True True True True True False) (String
                             (Ascii True True False True False True False
                             False) EmptyString))) of
                        Coq_left =>
                        SomeE (Coq_pair (Coq_pair sm (fn t' => Coq_bpar
                          (Coq_pair NONE ALL) prevT t')) t)
                      | Coq_right =>
                        (case string_dec h (String (Ascii True True False
                                True False True False False) (String (Ascii
                                False True True True True True True False)
                                (String (Ascii True False True True False
                                True False False) EmptyString))) of
                           Coq_left =>
                           SomeE (Coq_pair (Coq_pair sm (fn t' => Coq_bpar
                             (Coq_pair ALL NONE) prevT t')) t)
                         | Coq_right =>
                           (case string_dec h (String (Ascii True True False
                                   True False True False False) (String
                                   (Ascii False True True True True True True
                                   False) (String (Ascii True True False True
                                   False True False False) EmptyString))) of
                              Coq_left =>
                              SomeE (Coq_pair (Coq_pair sm (fn t' => Coq_bpar
                                (Coq_pair ALL ALL) prevT t')) t)
                            | Coq_right =>
                              NoneE (String (Ascii True False False True
                                False False True False) (String (Ascii False
                                True True True False True True False) (String
                                (Ascii False True True False True True True
                                False) (String (Ascii True False False False
                                False True True False) (String (Ascii False
                                False True True False True True False)
                                (String (Ascii True False False True False
                                True True False) (String (Ascii False False
                                True False False True True False) (String
                                (Ascii False False False False False True
                                False False) (String (Ascii False True False
                                False False True True False) (String (Ascii
                                False True False False True True True False)
                                (String (Ascii True False False False False
                                True True False) (String (Ascii False True
                                True True False True True False) (String
                                (Ascii True True False False False True True
                                False) (String (Ascii False False False True
                                False True True False)
                                EmptyString))))))))))))))))))))))

  (** val parseAT_Place :
      token list -> symbol_map -> ((symbol_map, coq_Plc) prod, token list)
      prod optionE **)

  fun parseAT_Place xs sm =
    case xs of
      [] =>
      NoneE (String (Ascii False False True True False False True False)
        (String (Ascii True True True True False True True False) (String
        (Ascii True True True True False True True False) (String (Ascii True
        True False True False True True False) (String (Ascii True False
        False True False True True False) (String (Ascii False True True True
        False True True False) (String (Ascii True True True False False True
        True False) (String (Ascii False False False False False True False
        False) (String (Ascii False True True False False True True False)
        (String (Ascii True True True True False True True False) (String
        (Ascii False True False False True True True False) (String (Ascii
        False False False False False True False False) (String (Ascii False
        False False False False False True False) (String (Ascii False False
        False False False True False False) (String (Ascii False False False
        False True True True False) (String (Ascii False False True True
        False True True False) (String (Ascii True False False False False
        True True False) (String (Ascii True True False False False True True
        False) (String (Ascii True False True False False True True False)
        EmptyString)))))))))))))))))))
    | h :: t =>
      let val lh = list_of_string h in
      (case PeanoNat.Nat.eqb (length h) (S O) of
         True =>
         (case string_dec h (String (Ascii False False False False False
                 False True False) EmptyString) of
            Coq_left =>
            (case parsePlace t sm of
               SomeE x =>
               let val Coq_pair p tks = x in
               let val Coq_pair sm' pStr = p in
               (case map_get str_eq_class sm' pStr of
                  Some plc => SomeE (Coq_pair (Coq_pair sm' plc) tks)
                | None =>
                  NoneE (String (Ascii True False True False False False True
                    False) (String (Ascii False True False False True False
                    True False) (String (Ascii False True False False True
                    False True False) (String (Ascii True True True True
                    False False True False) (String (Ascii False True False
                    False True False True False) (String (Ascii False False
                    False False False True False False) (String (Ascii True
                    False True True False True False False) (String (Ascii
                    False False False False False True False False) (String
                    (Ascii True False False True False False True False)
                    (String (Ascii False True True True False True True
                    False) (String (Ascii False True True False True True
                    True False) (String (Ascii True False False False False
                    True True False) (String (Ascii False False True True
                    False True True False) (String (Ascii True False False
                    True False True True False) (String (Ascii False False
                    True False False True True False) (String (Ascii False
                    False False False False True False False) (String (Ascii
                    False False False False True False True False) (String
                    (Ascii False False True True False True True False)
                    (String (Ascii True False False False False True True
                    False) (String (Ascii True True False False False True
                    True False) (String (Ascii True False True False False
                    True True False) (String (Ascii False False False False
                    False True False False) (String (Ascii True False False
                    True False True True False) (String (Ascii False True
                    True True False True True False) (String (Ascii False
                    False False False False True False False) (String (Ascii
                    True False True True False False True False) (String
                    (Ascii True False False False False True True False)
                    (String (Ascii False False False False True True True
                    False) EmptyString))))))))))))))))))))))))))))) end end
             | NoneE m => NoneE m
             | OutOfFuel => OutOfFuel)
          | Coq_right =>
            NoneE (String (Ascii True False True False False False True
              False) (String (Ascii False False False True True True True
              False) (String (Ascii False False False False True True True
              False) (String (Ascii True False True False False True True
              False) (String (Ascii True True False False False True True
              False) (String (Ascii False False True False True True True
              False) (String (Ascii True False True False False True True
              False) (String (Ascii False False True False False True True
              False) (String (Ascii False False False False False True False
              False) (String (Ascii False False False False False False True
              False) (String (Ascii False False False False False True False
              False) (String (Ascii True True False False True True True
              False) (String (Ascii True False False True True True True
              False) (String (Ascii True False True True False True True
              False) (String (Ascii False True False False False True True
              False) (String (Ascii True True True True False True True
              False) (String (Ascii False False True True False True True
              False) EmptyString))))))))))))))))))
       | False =>
         (case lh of
            [] =>
            NoneE (String (Ascii True False False True False False True
              False) (String (Ascii False True True True False True True
              False) (String (Ascii False True True False True True True
              False) (String (Ascii True False False False False True True
              False) (String (Ascii False False True True False True True
              False) (String (Ascii True False False True False True True
              False) (String (Ascii False False True False False True True
              False) (String (Ascii False False False False False True False
              False) (String (Ascii False False True False True True True
              False) (String (Ascii True True True True False True True
              False) (String (Ascii True True False True False True True
              False) (String (Ascii True False True False False True True
              False) (String (Ascii False True True True False True True
              False) (String (Ascii False False False False False True False
              False) (String (Ascii False True True False False True True
              False) (String (Ascii True True True True False True True
              False) (String (Ascii False True False False True True True
              False) (String (Ascii False False False False False True False
              False) (String (Ascii True False False False False False True
              False) (String (Ascii False False True False True False True
              False) (String (Ascii False False False False False True False
              False) (String (Ascii False False False False True False True
              False) (String (Ascii False False True True False True True
              False) (String (Ascii True False False False False True True
              False) (String (Ascii True True False False False True True
              False) (String (Ascii True False True False False True True
              False) EmptyString))))))))))))))))))))))))))
          | h' :: t' =>
            (case Ascii.eqb h' (Ascii False False False False False False
                    True False) of
               True =>
               let val firstTok = string_of_list t' in
               (case parsePlace (firstTok :: t) sm of
                  SomeE x =>
                  let val Coq_pair p tks = x in
                  let val Coq_pair sm' pStr = p in
                  (case map_get str_eq_class sm' pStr of
                     Some plc => SomeE (Coq_pair (Coq_pair sm' plc) tks)
                   | None =>
                     NoneE (String (Ascii True False True False False False
                       True False) (String (Ascii False True False False True
                       False True False) (String (Ascii False True False
                       False True False True False) (String (Ascii True True
                       True True False False True False) (String (Ascii False
                       True False False True False True False) (String (Ascii
                       False False False False False True False False)
                       (String (Ascii True False True True False True False
                       False) (String (Ascii False False False False False
                       True False False) (String (Ascii True False False True
                       False False True False) (String (Ascii False True True
                       True False True True False) (String (Ascii False True
                       True False True True True False) (String (Ascii True
                       False False False False True True False) (String
                       (Ascii False False True True False True True False)
                       (String (Ascii True False False True False True True
                       False) (String (Ascii False False True False False
                       True True False) (String (Ascii False False False
                       False False True False False) (String (Ascii False
                       False False False True False True False) (String
                       (Ascii False False True True False True True False)
                       (String (Ascii True False False False False True True
                       False) (String (Ascii True True False False False True
                       True False) (String (Ascii True False True False False
                       True True False) (String (Ascii False False False
                       False False True False False) (String (Ascii True
                       False False True False True True False) (String (Ascii
                       False True True True False True True False) (String
                       (Ascii False False False False False True False False)
                       (String (Ascii True False True True False False True
                       False) (String (Ascii True False False False False
                       True True False) (String (Ascii False False False
                       False True True True False)
                       EmptyString))))))))))))))))))))))))))))) end end
                | NoneE m => NoneE m
                | OutOfFuel => OutOfFuel) end
             | False =>
               NoneE (String (Ascii True False True False False False True
                 False) (String (Ascii False False False True True True True
                 False) (String (Ascii False False False False True True True
                 False) (String (Ascii True False True False False True True
                 False) (String (Ascii True True False False False True True
                 False) (String (Ascii False False True False True True True
                 False) (String (Ascii True False True False False True True
                 False) (String (Ascii False False True False False True True
                 False) (String (Ascii False False False False False True
                 False False) (String (Ascii False False False False False
                 False True False) (String (Ascii False False False False
                 False True False False) (String (Ascii True True False False
                 True True True False) (String (Ascii True False False True
                 True True True False) (String (Ascii True False True True
                 False True True False) (String (Ascii False True False False
                 False True True False) (String (Ascii True True True True
                 False True True False) (String (Ascii False False True True
                 False True True False) EmptyString)))))))))))))))))))) end

  (** val parsePhrase :
      nat -> token list -> symbol_map -> ((symbol_map, coq_Term) prod, token
      list) prod optionE **)

  fun parsePhrase fuel xs sm =
    case fuel of
      O => OutOfFuel
    | S fuel' =>
      (case xs of
         [] =>
         NoneE (String (Ascii True False True False False False True False)
           (String (Ascii False False False True True True True False)
           (String (Ascii False False False False True True True False)
           (String (Ascii True False True False False True True False)
           (String (Ascii True True False False False True True False)
           (String (Ascii False False True False True True True False)
           (String (Ascii True False True False False True True False)
           (String (Ascii False False True False False True True False)
           (String (Ascii False False False False False True False False)
           (String (Ascii False False False False True True True False)
           (String (Ascii False False False True False True True False)
           (String (Ascii False True False False True True True False)
           (String (Ascii True False False False False True True False)
           (String (Ascii True True False False True True True False) (String
           (Ascii True False True False False True True False)
           EmptyString)))))))))))))))
       | _ :: _ =>
         (case parseASP xs sm of
            SomeE x =>
            let val Coq_pair p xs' = x in
            let val Coq_pair sm' x' = p in
            (case parsePhrase' fuel' x' xs' sm' of
               SomeE x0 =>
               let val Coq_pair p0 xs'' = x0 in
               let val Coq_pair sm'0 o = p0 in
               (case o of
                  SomeE x'' => SomeE (Coq_pair (Coq_pair sm'0 x'') xs'')
                | NoneE _ => SomeE (Coq_pair (Coq_pair sm'0 x') xs')
                | OutOfFuel => OutOfFuel) end end
             | NoneE m => NoneE m
             | OutOfFuel => OutOfFuel) end end
          | NoneE m' =>
            (case parseATT fuel' xs sm of
               SomeE x =>
               let val Coq_pair p xs'' = x in
               let val Coq_pair sm' x'' = p in
               (case parsePhrase' fuel' x'' xs'' sm' of
                  SomeE x0 =>
                  let val Coq_pair p0 xs''' = x0 in
                  let val Coq_pair sm'0 o = p0 in
                  (case o of
                     SomeE x''' => SomeE (Coq_pair (Coq_pair sm'0 x''') xs''')
                   | NoneE _ => SomeE (Coq_pair (Coq_pair sm'0 x'') xs'')
                   | OutOfFuel => OutOfFuel) end end
                | NoneE m =>
                  NoneE
                    (append m
                      (append (String (Ascii False False True True False True
                        False False) (String (Ascii False False False False
                        False True False False) EmptyString)) m'))
                | OutOfFuel => OutOfFuel) end end
             | NoneE m'' =>
               (case parseParens fuel' xs sm of
                  SomeE x =>
                  let val Coq_pair p xs''' = x in
                  let val Coq_pair sm' x''' = p in
                  (case parsePhrase' fuel' x''' xs''' sm' of
                     SomeE x0 =>
                     let val Coq_pair p0 xs'''' = x0 in
                     let val Coq_pair sm'0 o = p0 in
                     (case o of
                        SomeE x'''' =>
                        SomeE (Coq_pair (Coq_pair sm'0 x'''') xs'''')
                      | NoneE _ => SomeE (Coq_pair (Coq_pair sm'0 x''') xs''')
                      | OutOfFuel => OutOfFuel) end end
                   | NoneE m => NoneE m
                   | OutOfFuel => OutOfFuel) end end
                | NoneE m''' =>
                  NoneE
                    (append (String (Ascii False True True False False False
                      True False) (String (Ascii True False False False False
                      True True False) (String (Ascii True False False True
                      False True True False) (String (Ascii False False True
                      True False True True False) (String (Ascii False True
                      False True True True False False) (String (Ascii False
                      False False False False True False False)
                      EmptyString))))))
                      (append m'''
                        (append (String (Ascii False False True True False
                          True False False) (String (Ascii False False False
                          False False True False False) EmptyString))
                          (append m''
                            (append (String (Ascii False False True True
                              False True False False) (String (Ascii False
                              False False False False True False False)
                              EmptyString)) m')))))
                | OutOfFuel => OutOfFuel)
             | OutOfFuel => OutOfFuel)
          | OutOfFuel => OutOfFuel))

  (** val parsePhrase' :
      nat -> coq_Term -> token list -> symbol_map -> ((symbol_map, coq_Term
      optionE) prod, token list) prod optionE **)

  and parsePhrase' fuel prevT xs sm =
    case fuel of
      O => OutOfFuel
    | S fuel' =>
      (case xs of
         [] =>
         SomeE (Coq_pair (Coq_pair sm (NoneE (String (Ascii True False True
           False False False True False) (String (Ascii True False True True
           False True True False) (String (Ascii False False False False True
           True True False) (String (Ascii False False True False True True
           True False) (String (Ascii True False False True True True True
           False) (String (Ascii True False False False True True False
           False) EmptyString)))))))) xs)
       | h :: t =>
         (case string_dec h (String (Ascii True False True True False True
                 False False) (String (Ascii False True True True True True
                 False False) EmptyString)) of
            Coq_left =>
            (case parsePhrase fuel' t sm of
               SomeE x =>
               let val Coq_pair p xs' = x in
               let val Coq_pair sm' x' = p in
               (case parsePhrase' fuel' (Coq_lseq prevT x') xs' sm' of
                  SomeE x0 =>
                  let val Coq_pair p0 xs'' = x0 in
                  let val Coq_pair sm'0 x'' = p0 in
                  (case x'' of
                     NoneE _ =>
                     SomeE (Coq_pair (Coq_pair sm'0 (SomeE (Coq_lseq prevT
                       x'))) xs')
                   | _ => SomeE (Coq_pair (Coq_pair sm'0 x'') xs'')) end end
                | x0 => x0) end end
             | NoneE _ =>
               NoneE (String (Ascii True False False True False True True
                 False) (String (Ascii False True True True False True True
                 False) (String (Ascii False True True False True True True
                 False) (String (Ascii True False False False False True True
                 False) (String (Ascii False False True True False True True
                 False) (String (Ascii True False False True False True True
                 False) (String (Ascii False False True False False True True
                 False) (String (Ascii False False False False False True
                 False False) (String (Ascii True False False False False
                 True True False) (String (Ascii False True False False True
                 True True False) (String (Ascii False True False False True
                 True True False) (String (Ascii True True True True False
                 True True False) (String (Ascii True True True False True
                 True True False) EmptyString)))))))))))))
             | OutOfFuel => OutOfFuel)
          | Coq_right =>
            (case parseBranch xs prevT sm of
               SomeE x =>
               let val Coq_pair p xs' = x in
               let val Coq_pair sm' brnFn = p in
               (case parsePhrase fuel' xs' sm' of
                  SomeE x0 =>
                  let val Coq_pair p0 xs'' = x0 in
                  let val Coq_pair sm'' x'' = p0 in
                  SomeE (Coq_pair (Coq_pair sm'' (SomeE (brnFn x''))) xs'') end end
                | NoneE m'' => NoneE m''
                | OutOfFuel => OutOfFuel) end end
             | NoneE _ =>
               SomeE (Coq_pair (Coq_pair sm (NoneE (String (Ascii True False
                 True False False False True False) (String (Ascii True False
                 True True False True True False) (String (Ascii False False
                 False False True True True False) (String (Ascii False False
                 True False True True True False) (String (Ascii True False
                 False True True True True False) (String (Ascii False True
                 False False True True False False) EmptyString)))))))) xs)
             | OutOfFuel => OutOfFuel)))

  (** val parseATT :
      nat -> token list -> symbol_map -> ((symbol_map, coq_Term) prod, token
      list) prod optionE **)

  and parseATT fuel xs sm =
    case fuel of
      O => OutOfFuel
    | S fuel' =>
      (case xs of
         [] =>
         NoneE (String (Ascii True False True False False False True False)
           (String (Ascii False False False True True True True False)
           (String (Ascii False False False False True True True False)
           (String (Ascii True False True False False True True False)
           (String (Ascii True True False False False True True False)
           (String (Ascii False False True False True True True False)
           (String (Ascii True False True False False True True False)
           (String (Ascii False False True False False True True False)
           (String (Ascii False False False False False True False False)
           (String (Ascii False False False False False False True False)
           (String (Ascii False False False False False True False False)
           (String (Ascii False False False False True True True False)
           (String (Ascii False False True True False True True False)
           (String (Ascii True True False False False True True False)
           (String (Ascii False False False False False True False False)
           (String (Ascii False False False False True False True False)
           (String (Ascii False False False True False False True False)
           (String (Ascii False True False False True False True False)
           EmptyString))))))))))))))))))
       | _ :: _ =>
         (case parseAT_Place xs sm of
            SomeE x0 =>
            let val Coq_pair p xs' = x0 in
            let val Coq_pair sm' x' = p in
            (case xs' of
               [] =>
               NoneE (String (Ascii True False True True False False True
                 False) (String (Ascii True False False True False True True
                 False) (String (Ascii True True False False True True True
                 False) (String (Ascii True True False False True True True
                 False) (String (Ascii True False False True False True True
                 False) (String (Ascii False True True True False True True
                 False) (String (Ascii True True True False False True True
                 False) (String (Ascii False False False False False True
                 False False) (String (Ascii False False False False True
                 True True False) (String (Ascii False False False True False
                 True True False) (String (Ascii False True False False True
                 True True False) (String (Ascii True False False False False
                 True True False) (String (Ascii True True False False True
                 True True False) (String (Ascii True False True False False
                 True True False) (String (Ascii False False False False
                 False True False False) (String (Ascii True False False
                 False False True True False) (String (Ascii False True True
                 False False True True False) (String (Ascii False False True
                 False True True True False) (String (Ascii True False True
                 False False True True False) (String (Ascii False True False
                 False True True True False) (String (Ascii False False False
                 False False True False False) (String (Ascii False False
                 False False False False True False) (String (Ascii False
                 False False False False True False False) (String (Ascii
                 False False False False True True True False) (String (Ascii
                 False False True True False True True False) (String (Ascii
                 True False False False False True True False) (String (Ascii
                 True True False False False True True False) (String (Ascii
                 True False True False False True True False)
                 EmptyString))))))))))))))))))))))))))))
             | h :: t =>
               (case string_dec h (String (Ascii True True False True True
                       False True False) EmptyString) of
                  Coq_left =>
                  (case parsePhrase fuel' t sm' of
                     SomeE x1 =>
                     let val Coq_pair p0 xs'' = x1 in
                     let val Coq_pair sm'' x'' = p0 in
                     (case xs'' of
                        [] =>
                        NoneE (String (Ascii True False True True False False
                          True False) (String (Ascii True False False True
                          False True True False) (String (Ascii True True
                          False False True True True False) (String (Ascii
                          True True False False True True True False) (String
                          (Ascii True False False True False True True False)
                          (String (Ascii False True True True False True True
                          False) (String (Ascii True True True False False
                          True True False) (String (Ascii False False False
                          False False True False False) (String (Ascii False
                          True True False False True True False) (String
                          (Ascii True False False True False True True False)
                          (String (Ascii False True True True False True True
                          False) (String (Ascii True False False False False
                          True True False) (String (Ascii False False True
                          True False True True False) (String (Ascii False
                          False False False False True False False) (String
                          (Ascii False True False False False True True
                          False) (String (Ascii False True False False True
                          True True False) (String (Ascii True False False
                          False False True True False) (String (Ascii True
                          True False False False True True False) (String
                          (Ascii True True False True False True True False)
                          (String (Ascii True False True False False True
                          True False) (String (Ascii False False True False
                          True True True False) (String (Ascii True True
                          False False True True True False)
                          EmptyString))))))))))))))))))))))
                      | h0 :: t0 =>
                        (case string_dec h0 (String (Ascii True False True
                                True True False True False) EmptyString) of
                           Coq_left =>
                           SomeE (Coq_pair (Coq_pair sm'' (Coq_att x' x''))
                             t0)
                         | Coq_right =>
                           NoneE (String (Ascii True False False True False
                             False True False) (String (Ascii False True True
                             True False True True False) (String (Ascii False
                             True True False True True True False) (String
                             (Ascii True False False False False True True
                             False) (String (Ascii False False True True
                             False True True False) (String (Ascii True False
                             False True False True True False) (String (Ascii
                             False False True False False True True False)
                             (String (Ascii False False False False False
                             True False False) (String (Ascii False True True
                             False False True True False) (String (Ascii True
                             False False True False True True False) (String
                             (Ascii False True True True False True True
                             False) (String (Ascii True False False False
                             False True True False) (String (Ascii False
                             False True True False True True False) (String
                             (Ascii False False False False False True False
                             False) (String (Ascii False True False False
                             False True True False) (String (Ascii False True
                             False False True True True False) (String (Ascii
                             True False False False False True True False)
                             (String (Ascii True True False False False True
                             True False) (String (Ascii True True False True
                             False True True False) (String (Ascii True False
                             True False False True True False) (String (Ascii
                             False False True False True True True False)
                             (String (Ascii True True False False True True
                             True False) EmptyString)))))))))))))))))))))))) end end
                   | NoneE m =>
                     NoneE
                       (append (String (Ascii True False False True False
                         False True False) (String (Ascii False True True
                         True False True True False) (String (Ascii False
                         True True False True True True False) (String (Ascii
                         True False False False False True True False)
                         (String (Ascii False False True True False True True
                         False) (String (Ascii True False False True False
                         True True False) (String (Ascii False False True
                         False False True True False) (String (Ascii False
                         False False False False True False False) (String
                         (Ascii False False False False True True True False)
                         (String (Ascii False False False True False True
                         True False) (String (Ascii False True False False
                         True True True False) (String (Ascii True False
                         False False False True True False) (String (Ascii
                         True True False False True True True False) (String
                         (Ascii True False True False False True True False)
                         (String (Ascii False False False False False True
                         False False) (String (Ascii True False False False
                         False True True False) (String (Ascii False True
                         True False False True True False) (String (Ascii
                         False False True False True True True False) (String
                         (Ascii True False True False False True True False)
                         (String (Ascii False True False False True True True
                         False) (String (Ascii False False False False False
                         True False False) (String (Ascii False False False
                         False False False True False) (String (Ascii False
                         False False False False True False False) (String
                         (Ascii False False False False True True True False)
                         (String (Ascii False False True True False True True
                         False) (String (Ascii True False False False False
                         True True False) (String (Ascii True True False
                         False False True True False) (String (Ascii True
                         False True False False True True False) (String
                         (Ascii False False False False False True False
                         False) (String (Ascii False False False True False
                         True False False) (String (Ascii True False False
                         False True True False False) (String (Ascii True
                         False False True False True False False) (String
                         (Ascii False False False False False True False
                         False) (String (Ascii False False True False False
                         True True False) (String (Ascii True False True
                         False True True True False) (String (Ascii True
                         False True False False True True False) (String
                         (Ascii False False False False False True False
                         False) (String (Ascii False False True False True
                         True True False) (String (Ascii True True True True
                         False True True False) (String (Ascii False False
                         False False False True False False) (String (Ascii
                         False False False True False True False False)
                         EmptyString)))))))))))))))))))))))))))))))))))))))))
                         (append m (String (Ascii True False False True False
                           True False False) (String (Ascii False False True
                           True False True False False) (String (Ascii False
                           False False False False True False False)
                           EmptyString)))))
                   | OutOfFuel => OutOfFuel)
                | Coq_right =>
                  (case parsePhrase fuel' xs' sm' of
                     SomeE x1 =>
                     let val Coq_pair p0 xs'' = x1 in
                     let val Coq_pair sm'0 x'' = p0 in
                     SomeE (Coq_pair (Coq_pair sm'0 (Coq_att x' x'')) xs'') end end
                   | NoneE m =>
                     NoneE
                       (append (String (Ascii True False False True False
                         False True False) (String (Ascii False True True
                         True False True True False) (String (Ascii False
                         True True False True True True False) (String (Ascii
                         True False False False False True True False)
                         (String (Ascii False False True True False True True
                         False) (String (Ascii True False False True False
                         True True False) (String (Ascii False False True
                         False False True True False) (String (Ascii False
                         False False False False True False False) (String
                         (Ascii False False False False True True True False)
                         (String (Ascii False False False True False True
                         True False) (String (Ascii False True False False
                         True True True False) (String (Ascii True False
                         False False False True True False) (String (Ascii
                         True True False False True True True False) (String
                         (Ascii True False True False False True True False)
                         (String (Ascii False False False False False True
                         False False) (String (Ascii True False False False
                         False True True False) (String (Ascii False True
                         True False False True True False) (String (Ascii
                         False False True False True True True False) (String
                         (Ascii True False True False False True True False)
                         (String (Ascii False True False False True True True
                         False) (String (Ascii False False False False False
                         True False False) (String (Ascii False False False
                         False False False True False) (String (Ascii False
                         False False False False True False False) (String
                         (Ascii False False False False True True True False)
                         (String (Ascii False False True True False True True
                         False) (String (Ascii True False False False False
                         True True False) (String (Ascii True True False
                         False False True True False) (String (Ascii True
                         False True False False True True False) (String
                         (Ascii False False False False False True False
                         False) (String (Ascii False False False True False
                         True False False) (String (Ascii False True False
                         False True True False False) (String (Ascii True
                         False False True False True False False) (String
                         (Ascii False False False False False True False
                         False) (String (Ascii False False True False False
                         True True False) (String (Ascii True False True
                         False True True True False) (String (Ascii True
                         False True False False True True False) (String
                         (Ascii False False False False False True False
                         False) (String (Ascii False False True False True
                         True True False) (String (Ascii True True True True
                         False True True False) (String (Ascii False False
                         False False False True False False) (String (Ascii
                         False False False True False True False False)
                         EmptyString)))))))))))))))))))))))))))))))))))))))))
                         (append m (String (Ascii True False False True False
                           True False False) (String (Ascii False False True
                           True False True False False) (String (Ascii False
                           False False False False True False False)
                           EmptyString)))))
                   | OutOfFuel => OutOfFuel))) end end
          | NoneE _ =>
            NoneE (String (Ascii False True True False False False True
              False) (String (Ascii True False False False False True True
              False) (String (Ascii True False False True False True True
              False) (String (Ascii False False True True False True True
              False) (String (Ascii True False True False False True True
              False) (String (Ascii False False True False False True True
              False) (String (Ascii False False False False False True False
              False) (String (Ascii False False True False True True True
              False) (String (Ascii True True True True False True True
              False) (String (Ascii False False False False False True False
              False) (String (Ascii False False False False True True True
              False) (String (Ascii True False False False False True True
              False) (String (Ascii False True False False True True True
              False) (String (Ascii True True False False True True True
              False) (String (Ascii True False True False False True True
              False) (String (Ascii True False False False False False True
              False) (String (Ascii False False True False True False True
              False) (String (Ascii False False True False True False True
              False) (String (Ascii False False False False False True False
              False) (String (Ascii False True False True True True False
              False) (String (Ascii False False False False False True False
              False) EmptyString)))))))))))))))))))))
          | OutOfFuel => OutOfFuel))

  (** val parseParens :
      nat -> token list -> symbol_map -> ((symbol_map, coq_Term) prod, token
      list) prod optionE **)

  and parseParens fuel xs sm =
    case fuel of
      O => OutOfFuel
    | S fuel' =>
      (case xs of
         [] =>
         NoneE (String (Ascii True False True True False False True False)
           (String (Ascii True False False True False True True False)
           (String (Ascii True True False False True True True False) (String
           (Ascii True True False False True True True False) (String (Ascii
           True False False True False True True False) (String (Ascii False
           True True True False True True False) (String (Ascii True True
           True False False True True False) (String (Ascii False False False
           False False True False False) (String (Ascii False False False
           False True True True False) (String (Ascii True False False False
           False True True False) (String (Ascii False True False False True
           True True False) (String (Ascii True False True False False True
           True False) (String (Ascii False True True True False True True
           False) (String (Ascii False False True False True True True False)
           (String (Ascii False False False True False True True False)
           (String (Ascii True False True False False True True False)
           (String (Ascii True True False False True True True False) (String
           (Ascii True False False True False True True False) (String (Ascii
           True True False False True True True False)
           EmptyString)))))))))))))))))))
       | h :: t =>
         (case string_dec h (String (Ascii False False False True False True
                 False False) EmptyString) of
            Coq_left =>
            (case parsePhrase fuel' t sm of
               SomeE x =>
               let val Coq_pair p xs'' = x in
               (case xs'' of
                  [] =>
                  NoneE (String (Ascii True False True True False False True
                    False) (String (Ascii True False False True False True
                    True False) (String (Ascii True True False False True
                    True True False) (String (Ascii True True False False
                    True True True False) (String (Ascii True False False
                    True False True True False) (String (Ascii False True
                    True True False True True False) (String (Ascii True True
                    True False False True True False) (String (Ascii False
                    False False False False True False False) (String (Ascii
                    False True True False False True True False) (String
                    (Ascii True False False True False True True False)
                    (String (Ascii False True True True False True True
                    False) (String (Ascii True False False False False True
                    True False) (String (Ascii False False True True False
                    True True False) (String (Ascii False False False False
                    False True False False) (String (Ascii False False False
                    False True True True False) (String (Ascii True False
                    False False False True True False) (String (Ascii False
                    True False False True True True False) (String (Ascii
                    True False True False False True True False) (String
                    (Ascii False True True True False True True False)
                    (String (Ascii True True False False True True True
                    False) EmptyString))))))))))))))))))))
                | h0 :: t0 =>
                  (case string_dec h0 (String (Ascii True False False True
                          False True False False) EmptyString) of
                     Coq_left => SomeE (Coq_pair p t0)
                   | Coq_right =>
                     NoneE (String (Ascii True False False True False False
                       True False) (String (Ascii False True True True False
                       True True False) (String (Ascii False True True False
                       True True True False) (String (Ascii True False False
                       False False True True False) (String (Ascii False
                       False True True False True True False) (String (Ascii
                       True False False True False True True False) (String
                       (Ascii False False True False False True True False)
                       (String (Ascii False False False False False True
                       False False) (String (Ascii False True True False
                       False True True False) (String (Ascii True False False
                       True False True True False) (String (Ascii False True
                       True True False True True False) (String (Ascii True
                       False False False False True True False) (String
                       (Ascii False False True True False True True False)
                       (String (Ascii False False False False False True
                       False False) (String (Ascii False False False False
                       True True True False) (String (Ascii True False False
                       False False True True False) (String (Ascii False True
                       False False True True True False) (String (Ascii True
                       False True False False True True False) (String (Ascii
                       False True True True False True True False) (String
                       (Ascii True True False False True True True False)
                       EmptyString)))))))))))))))))))))) end
             | NoneE m =>
               NoneE
                 (append (String (Ascii True False False True False False
                   True False) (String (Ascii False True True True False True
                   True False) (String (Ascii False True True False True True
                   True False) (String (Ascii True False False False False
                   True True False) (String (Ascii False False True True
                   False True True False) (String (Ascii True False False
                   True False True True False) (String (Ascii False False
                   True False False True True False) (String (Ascii False
                   False False False False True False False) (String (Ascii
                   False False False False True True True False) (String
                   (Ascii False False False True False True True False)
                   (String (Ascii False True False False True True True
                   False) (String (Ascii True False False False False True
                   True False) (String (Ascii True True False False True True
                   True False) (String (Ascii True False True False False
                   True True False) (String (Ascii False False False False
                   False True False False) (String (Ascii True True True
                   False True True True False) (String (Ascii True False
                   False True False True True False) (String (Ascii False
                   False True False True True True False) (String (Ascii
                   False False False True False True True False) (String
                   (Ascii True False False True False True True False)
                   (String (Ascii False True True True False True True False)
                   (String (Ascii False False False False False True False
                   False) (String (Ascii False False False False True True
                   True False) (String (Ascii True False False False False
                   True True False) (String (Ascii False True False False
                   True True True False) (String (Ascii True False True False
                   False True True False) (String (Ascii False True True True
                   False True True False) (String (Ascii True True False
                   False True True True False) (String (Ascii False False
                   False False False True False False) (String (Ascii False
                   False True False False True True False) (String (Ascii
                   True False True False True True True False) (String (Ascii
                   True False True False False True True False) (String
                   (Ascii False False False False False True False False)
                   (String (Ascii False False True False True True True
                   False) (String (Ascii True True True True False True True
                   False) (String (Ascii False False False False False True
                   False False) (String (Ascii False False False True False
                   True False False)
                   EmptyString)))))))))))))))))))))))))))))))))))))
                   (append m (String (Ascii True False False True False True
                     False False) (String (Ascii False False True True False
                     True False False) (String (Ascii False False False False
                     False True False False) EmptyString)))))
             | OutOfFuel => OutOfFuel)
          | Coq_right =>
            NoneE (String (Ascii True False True True False False True False)
              (String (Ascii True False False True False True True False)
              (String (Ascii True True False False True True True False)
              (String (Ascii True True False False True True True False)
              (String (Ascii True False False True False True True False)
              (String (Ascii False True True True False True True False)
              (String (Ascii True True True False False True True False)
              (String (Ascii False False False False False True False False)
              (String (Ascii False False False False True True True False)
              (String (Ascii True False False False False True True False)
              (String (Ascii False True False False True True True False)
              (String (Ascii True False True False False True True False)
              (String (Ascii False True True True False True True False)
              (String (Ascii False False True False True True True False)
              (String (Ascii False False False True False True True False)
              (String (Ascii True False True False False True True False)
              (String (Ascii True True False False True True True False)
              (String (Ascii True False False True False True True False)
              (String (Ascii True True False False True True True False)
              EmptyString)))))))))))))))))))))
 end
