type coq_CakeML_ASPCallback =
  coq_ASP_PARAMS -> coq_Plc -> coq_BS -> coq_RawEv -> coq_BS

type coq_CakeML_PubKeyCallback = coq_Plc -> coq_PublicKey

type coq_CakeML_PlcCallback = coq_Plc -> coq_UUID

type coq_CakeML_uuidCallback = coq_UUID -> coq_Plc

datatype coq_Manifest =
  Build_Manifest coq_Plc (coq_ASP_ID list) (coq_Plc list) (coq_Plc list)
   coq_PolicyT

(** val empty_Manifest : coq_Manifest **)

val empty_Manifest =
  Build_Manifest empty_Manifest_Plc [] [] [] empty_PolicyT

datatype coq_AM_Library =
  Build_AM_Library ((coq_ASP_Address -> coq_CakeML_ASPCallback))
   ((coq_ASP_Address -> coq_CakeML_PubKeyCallback))
   ((coq_ASP_Address -> coq_CakeML_PlcCallback))
   ((coq_ASP_Address -> coq_CakeML_uuidCallback)) coq_ASP_Address
   coq_ASP_Address coq_ASP_Address coq_ASP_Address
   ((coq_ASP_ID, coq_CakeML_ASPCallback) coq_MapC)
   ((coq_Plc, coq_UUID) coq_MapD) ((coq_Plc, coq_PublicKey) coq_MapD)

datatype coq_ConcreteManifest =
  Build_ConcreteManifest coq_Plc ((coq_Plc, coq_UUID) coq_MapD)
   ((coq_Plc, coq_PublicKey) coq_MapD) coq_ASP_Address coq_ASP_Address
   coq_ASP_Address coq_ASP_Address
